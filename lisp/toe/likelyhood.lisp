(defun likelyhood (this seen)
  (let ((prob 1))
    (dolist (el this)
      (let ((s 0)(d 0))
	(if (not (numberp el))
	    (dohash (key value (nth (position el this) seen))
	      (if (member el key)
		  (progn (setf s (+ s value))
			 (setf d (+ d value)))
		  (setf d (+ d value))))
	    (dohash (key value (nth (position el this) seen))
	      (if (and (<= el (normal-max value))
		       (>= el (normal-min value)))
		  (progn (setf d 1) (setf s 1))
		  (if (not (= 1 s))
		      (setf d 1)))))
	(if (> 1 (/ s d))
	    (setf prob (* prob (/ s d))))))
    prob))

; (likelyhood '(RAINY 71 90 TRUE NO) (count-list (weather-numerics)))

